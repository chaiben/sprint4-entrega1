{
	"info": {
		"_postman_id": "0daeddbc-9cad-4820-af4c-f56c2606f0c2",
		"name": "Sprint4 - Entrega 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21341594"
	},
	"item": [
		{
			"name": "/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Not found page status is false\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(false);",
							"});",
							"pm.test(\"Not found page error is Not Found 404\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error[0]).to.eql('Not found - 404');",
							"});",
							"pm.test(\"Not found page payload is null\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload).to.eql(null);",
							"});",
							"pm.test(\"Not found page message is Resource not found\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message[0]).to.eql('Resource not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test name and age\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.name).to.eql(\"Mar√ßal\");",
							"    pm.expect(jsonData.payload.age).to.eql(43);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/user",
					"host": [
						"{{host}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload jpg",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Upload jpg\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(true);",
							"    pm.expect(jsonData.message[0]).to.eql(\"File uploaded\");",
							"    pm.expect(jsonData.payload.mimetype).to.eql(\"image/jpeg\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{host}}/upload",
					"host": [
						"{{host}}"
					],
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload png",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Upload jpg\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(true);",
							"    pm.expect(jsonData.message[0]).to.eql(\"File uploaded\");",
							"    pm.expect(jsonData.payload.mimetype).to.eql(\"image/png\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test.png"
						}
					]
				},
				"url": {
					"raw": "{{host}}/upload",
					"host": [
						"{{host}}"
					],
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload gif",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Upload jpg\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(true);",
							"    pm.expect(jsonData.message[0]).to.eql(\"File uploaded\");",
							"    pm.expect(jsonData.payload.mimetype).to.eql(\"image/gif\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test.gif"
						}
					]
				},
				"url": {
					"raw": "{{host}}/upload",
					"host": [
						"{{host}}"
					],
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload missing file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Uplaod - Missing file\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(false);",
							"    pm.expect(jsonData.message[0]).to.eql(\"Please, add a file to the key \\\"file\\\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{host}}/upload",
					"host": [
						"{{host}}"
					],
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload txt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Upload txt\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(false);",
							"    pm.expect(jsonData.message[0]).to.eql(\"Invalid file format. Please, upload only jpg/jpeg, png or gif files\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test.txt"
						}
					]
				},
				"url": {
					"raw": "{{host}}/upload",
					"host": [
						"{{host}}"
					],
					"path": [
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "Time - OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status is true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(true);",
							"});",
							"pm.test(\"Error is empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).is.empty",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "chaiben",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/time",
					"host": [
						"{{host}}"
					],
					"path": [
						"time"
					]
				}
			},
			"response": []
		},
		{
			"name": "Time - OK Wrong user or password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Payload is empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload).eq(null)",
							"});",
							"pm.test(\"Status is false\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(false);",
							"});",
							"pm.test(\"Wrong user or password\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Wrong user or password\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "chai",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/time",
					"host": [
						"{{host}}"
					],
					"path": [
						"time"
					]
				}
			},
			"response": []
		},
		{
			"name": "Time - missing name field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Payload is empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload).eq(null)",
							"});",
							"pm.test(\"Status is false\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(false);",
							"});",
							"pm.test(\"Username is required\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Username is required\");",
							"});",
							"pm.test(\"Password is required\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Password is required\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Mar√ßal",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{host}}/time",
					"host": [
						"{{host}}"
					],
					"path": [
						"time"
					]
				}
			},
			"response": []
		}
	]
}